version: "3.8"

services:
  # GoPadi Backend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # Server Configuration
      PUBLIC_HOST: ${PUBLIC_HOST:-localhost}
      PORT: ${PORT:-8080}

      # Database Configuration (PostgreSQL)
      DB_DRIVER: ${DB_DRIVER:-postgres}
      DB_ADDRESS: ${DB_ADDRESS:-postgresql://gopi_user:gopi_password@db:5432/gopi_db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-gopi_user}
      DB_PASSWORD: ${DB_PASSWORD:-gopi_password}
      DB_NAME: ${DB_NAME:-gopi_db}
      DB_HOST: ${DB_HOST:-db}

      # Redis Configuration
      REDIS_ADDR: ${REDIS_ADDR:-redis:6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_DB: ${REDIS_DB:-0}

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      USE_DATABASE_JWT: ${USE_DATABASE_JWT:-true}

      # Email Configuration (Local for development)
      USE_LOCAL_EMAIL: true
      EMAIL_LOG_PATH: ./logs/emails.log
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USERNAME: your-email@gmail.com
      EMAIL_PASSWORD: your-app-password
      EMAIL_FROM: noreply@gopadi.com

      # Password Reset Configuration
      USE_DATABASE_PWRESET: ${USE_DATABASE_PWRESET:-true}

      # Logging Configuration
      LOG_LEVEL: info
      LOG_FILE: logs/app.log
      LOG_FILE_ENABLED: true
      GIN_MODE: debug

      # Session Configuration
      SESSION_SECRET: dev-session-secret-docker
      SESSION_NAME: gopi_session
      SESSION_SECURE: false
      SESSION_DOMAIN: ""
      SESSION_MAX_AGE: 86400

      # Storage Configuration
      STORAGE_BACKEND: local
      UPLOAD_BASE_DIR: ./uploads
      UPLOAD_PUBLIC_BASE_URL: /uploads

      # S3 Configuration (optional)
      S3_ENDPOINT: ""
      S3_REGION: us-east-1
      S3_BUCKET: ""
      S3_ACCESS_KEY_ID: ""
      S3_SECRET_ACCESS_KEY: ""
      S3_USE_SSL: true
      S3_FORCE_PATH_STYLE: false
      S3_PUBLIC_BASE_URL: ""
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - gopi-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: gopi_db
      POSTGRES_USER: gopi_user
      POSTGRES_PASSWORD: gopi_password
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - gopi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gopi_user -d gopi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gopi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Adminer (Database GUI)
  adminer:
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      - db
    networks:
      - gopi-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  gopi-network:
    driver: bridge
